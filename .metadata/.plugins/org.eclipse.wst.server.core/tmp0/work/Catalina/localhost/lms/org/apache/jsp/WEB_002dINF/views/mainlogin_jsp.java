/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-12-06 02:35:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mainlogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1662522019611L));
    _jspx_dependants.put("jar:file:/D:/LMSAndSpring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/LMS/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>영문대학교(LMS)</title>\r\n");
      out.write("<link rel=\"short icon\" type=\"image/x-icon\" href=\"resources/images/mainlogin/lmslogo.png\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"resources/css/mainlogin.css\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header>\r\n");
      out.write("	<img src=\"resources/images/mainlogin/logo_black.png\">\r\n");
      out.write("</header>\r\n");
      out.write("\r\n");
      out.write("<div class='content'>\r\n");
      out.write("	<div class='col-main'>\r\n");
      out.write("		<div class='col-login'>\r\n");
      out.write("			<div class='loginbox'>\r\n");
      out.write("			<h2 class='login-title'>LOGIN</h2>\r\n");
      out.write("			<form class='mform' method='post' action='login'>\r\n");
      out.write("				<div class='textform'>\r\n");
      out.write("					<input type='text' id='id' name='id' placeholder='사용자 아이디' class='user-id'>\r\n");
      out.write("					<input type='password' id='pw' name='pw' placeholder='비밀번호' class='user-pw'>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class='submit-login'>\r\n");
      out.write("					<input type='submit' id='login' name='btn_login' class='btn-login' value='로그인' onclick=\"location='/login'\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class='checkbox'>\r\n");
      out.write("					<label><input type=\"checkbox\" id='remember' name='remember_user'>사용자이름 기억</label>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class='find'>\r\n");
      out.write("					<a href='' target='_blank'>아이디 / 비밀번호 찾기</a>\r\n");
      out.write("				</div>\r\n");
      out.write("			</form>\r\n");
      out.write("			</div>\r\n");
      out.write("		<div class='col-family'>\r\n");
      out.write("			<ul>\r\n");
      out.write("				<li class='family1'><a href ='#'>영문대학교</a></li>\r\n");
      out.write("				<li class='family2'><a href ='#'>중앙도서관</a></li>\r\n");
      out.write("				<li class='family3'><a href ='#'>종합정보시스템</a></li>\r\n");
      out.write("				<li class='family4'><a href ='welcom'>학교소개</a></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class='notice'>\r\n");
      out.write("			<div class='col-notice'>\r\n");
      out.write("				<div>\r\n");
      out.write("					<h3>공지사항</h3>\r\n");
      out.write("					<ul>\r\n");
      out.write("						<li><a href=''>[LMS를 활용한 수업 관리 노하우] 온라인 워크숍 안내</a></li>\r\n");
      out.write("						<li><a href=''>MS Teams 녹화영상 확인 방법 안내</a></li>\r\n");
      out.write("						<li><a href=''>[교수용] LMS 시험(퀴즈) 기능 관련 유의사항 안내</a></li>\r\n");
      out.write("						<li><a href=''>LMS - MS TEAMS 연동 교수용 매뉴얼</a></li>\r\n");
      out.write("					</ul>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class='row'>\r\n");
      out.write("				<div class='col-login-btn'>\r\n");
      out.write("					<div class='login-btn'><a href='' class='right-arrow'>Q&A</a></div>\r\n");
      out.write("					<div class='login-btn'><a href='' class='right-arrow'>공지사항</a></div>\r\n");
      out.write("					<div class='login-btn'><a href='' class='right-arrow'>메뉴얼</a></div>\r\n");
      out.write("					<div class='login-btn'><a href='' class='right-arrow'>FAQ</a></div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("<footer>\r\n");
      out.write("	<div class=\"footer-info\">\r\n");
      out.write("		<a href='' class='info'>개인정보처리방침</a>\r\n");
      out.write("		<a class='addr'>광주광역시 서구 농성동 경열로 3<span class='tel'>연락처: 062-362-7897</span></a>\r\n");
      out.write("	</div>\r\n");
      out.write("</footer>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("$('.login').click(function(){\r\n");
      out.write("	url:'/login'\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
